<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <name>DMX Linqa</name>
    <groupId>systems.dmx</groupId>
    <artifactId>dmx-linqa</artifactId>
    <version>2.2-SNAPSHOT</version>
    <packaging>bundle</packaging>

    <description>The Linqa bilingual collaboration platform</description>

    <parent>
        <groupId>systems.dmx</groupId>
        <artifactId>dmx-plugin</artifactId>
        <version>5.3.5</version>
    </parent>

    <properties>
        <!-- Cascading test flags -->
        <maven.test.skip>false</maven.test.skip>
        <skipTests>${maven.test.skip}</skipTests>
        <skipJavaScriptTests>${skipTests}</skipJavaScriptTests>
    </properties>

    <dependencies>
        <dependency>
            <groupId>systems.dmx</groupId>
            <artifactId>dmx-deepl</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>systems.dmx</groupId>
            <artifactId>dmx-files</artifactId>
            <version>5.3.5</version>
        </dependency>
        <dependency>
            <groupId>systems.dmx</groupId>
            <artifactId>dmx-workspaces</artifactId>
            <version>5.3.5</version>
        </dependency>
        <dependency>
            <groupId>systems.dmx</groupId>
            <artifactId>dmx-accesscontrol</artifactId>
            <version>5.3.5</version>
        </dependency>
        <dependency>
            <groupId>systems.dmx</groupId>
            <artifactId>dmx-timestamps</artifactId>
            <version>5.3.5</version>
        </dependency>
        <dependency>
            <groupId>systems.dmx</groupId>
            <artifactId>dmx-sign-up</artifactId>
            <version>3.3.0</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.16.2</version>
        </dependency>
        <dependency>
            <groupId>org.jcodec</groupId>
            <artifactId>jcodec</artifactId>
            <version>0.2.5</version>
        </dependency>
        <dependency>
            <groupId>org.jcodec</groupId>
            <artifactId>jcodec-javase</artifactId>
            <version>0.2.5</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <Bundle-Activator>systems.dmx.linqa.LinqaPlugin</Bundle-Activator>
                        <Include-Resource>{maven-resources},web=target/classes/web</Include-Resource>
                        <Embed-Dependency>jsoup, jcodec, jcodec-javase</Embed-Dependency>
                        <Import-Package>
                            !javax.annotation.meta, *
                        </Import-Package>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>npm-install</id>
                        <phase>test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>npm</executable>
                            <commandlineArgs>install</commandlineArgs>
                        </configuration>
                    </execution>
                    <!--execution>      TODO: adapt test environment to Vue 3
                        <id>npm-run-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <skip>${skipJavaScriptTests}</skip>
                            <executable>npm</executable>
                            <commandlineArgs>run test</commandlineArgs>
                        </configuration>
                    </execution-->
                    <execution>
                        <id>npm-run-build</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>npm</executable>
                            <commandlineArgs>run build</commandlineArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- Activate this profile to use the docker deployment included in the project -->
            <id>docker</id>
            <activation>
                <property>
                    <name>env.DMX_DEPLOYMENT</name>
                    <value>docker</value>
                </property>
            </activation>
            <properties>
                <dmx.deploy.dir>./deploy/instance/dev/bundle-deploy</dmx.deploy.dir>
            </properties>
        </profile>
        <profile>
            <id>coverage</id>
            <properties>
                <sonar.sources>src/main/java,src/main/js,src/main/resources</sonar.sources>
                <sonar.tests>src/test/java,src/test/js</sonar.tests>
                <sonar.javascript.lcov.reportPaths>coverage/lcov.info</sonar.javascript.lcov.reportPaths>
            </properties>
        </profile>
    </profiles>
</project>
